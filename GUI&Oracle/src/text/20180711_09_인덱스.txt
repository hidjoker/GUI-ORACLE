
 + 인덱스, Index

  - 색인

  - 테이블 검색 속도 향상을 위한 오브젝트

  - 테이블의 컬럼 적용된다

  - 테이블과 독립적으로 생성되지만 테이블의 컬럼에 의존적

  - UNIQUE KEY(UK, 유일키) 제약 사항이 걸린 컬럼은 자동으로 생성



 + 인덱스 장점
  - 검색 속도가 향상된다

  - 테이블을 전체조회할 때 발생할 수 있는 시스템 성능 저하를
   줄여준다



 + 인덱스 단점
  - 인덱스 객체를 생성하는데 시간이 필요하다

  - 인덱스를 위한 별도의 공간이 필요하다

  - 검색 성능향상이 있지만 추가,수정,삭제에는 도움이 되지 않는다

  - 테이블에 추가,삭제,수정이 발생 하면 인덱싱을 다시 수행해야한다



 + 인덱스 생성이 필요한 경우
  - 데이터가 많을 때 ( 약 1000건 이상 )

  - WHERE 구문에서 조건으로 특정 컬럼이 많이 사용될 때

  - JOIN 조건절에서 특정 컬럼이 많이 사용될 때



 + 인덱스 생성이 불필요한 경우
  - 데이터가 적을 때 ( 수천건 미만 )

  - SELECT보다 INSERT,UPDATE,DELETE가 빈번한 경우

  - 조회 결과가 전체 행 수의 상당부분을 차지하는 경우(약 15%)



 + 인덱스 종류 및 생성 구문

  - NON-UNIQUE INDEX : 중복을 허용하는 인덱스
	CREATE INDEX 인덱스명 ON 테이블명( 컬럼명 );


  - UNIQUE INDEX : 중복을 허용하지 않는 인덱스
	CREATE UNIQUE INDEX 인덱스명 ON 테이블명( 컬럼명 );


  - COMPOSITE INDEX : 복합 컬럼 인덱스
	CREATE INDEX 인덱스명 ON 테이블명( 컬럼1, 컬럼2, ... );



 + 인덱스 재생성 구문
	ALTER INDEX 인덱스명 REBUILD;


 + 인덱스 제거 구문
	DROP INDEX 인덱스명;


 + 인덱스 조회

	SELECT * FROM USER_INDEXES; -- 인덱스 조회

	SELECT * FROM USER_IND_COLUMNS; -- 인덱싱 컬럼조회
